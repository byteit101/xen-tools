#!/bin/sh
#
#  Ensure that either modules-init-tools or kmod is setup.
#
#  This is most likely required if you're using a custom kernel
# for your Xen system.  But even if it isn't required it can't
# really do anything bad; just waste a bit of space.


prefix=$1



#
#  Source our common functions
#
if [ -e /usr/share/xen-tools/common.sh ]; then
    . /usr/share/xen-tools/common.sh
else
    . ./hooks/common.sh
fi


#
# Log our start
#
logMessage Script $0 starting

if [ "${pvgrub}" = "1" ]; then

    mount -o bind /proc ${prefix}/proc
    mount -o bind /dev ${prefix}/dev
    #
    #  Install the grub2 xen binaries
    #
    installDebianPackage ${prefix} grub-xen

    # PV(H) should always have this set unless using UEFI, but either way it's needed for update-grub to not break
    echo 'GRUB_TERMINAL=console' > ${prefix}/etc/default/grub.d/xen-guest-serial.cfg
    echo 'GRUB_DISABLE_OS_PROBER=true' > ${prefix}/etc/default/grub.d/xen-guest-disable-prober.cfg

    # Grub2 < 2.12 doesn't like generating in chroots. Patch that change out
    if grep -q "We can't cope with devices loop-mounted from files here." ${prefix}/etc/grub.d/10_linux; then
        sed -i 's/*) exit 0 ;;/*) ;;/' ${prefix}/etc/grub.d/10_linux
    fi

    # set the serial device
    sed -i 's/GRUB_CMDLINE_LINUX=""/GRUB_CMDLINE_LINUX="console='$serial_device'"/' ${prefix}/etc/default/grub
    # For reasons unknown, PVH shows systemd status by default, but PVH doesn't.
    # setting 'systemd.show_status=true quiet' may be handy to normalize them

    echo "Generating grub.cfg, this will cause several errors to be printed if you are using loop devices..."
    chroot ${prefix} /usr/sbin/update-grub2
    result=$?
    if [ "${firmware}" != 'bios' ]; then
        rm ${prefix}/etc/default/grub.d/xen-guest-serial.cfg
    fi
    umount ${prefix}/proc
    umount ${prefix}/dev
    if [ $result != 0 ]; then
        exit $result
    fi
else
    logMessage "grub2 not set, skipping pvgrub installation"

    if [ "${pygrub}" = "1" ]; then

        #
        #  Install the grub 0.9x package ("grub-legacy" on Debian, "grub" on Ubuntu)
        #
        if chroot ${prefix} /usr/bin/apt-cache show grub-legacy 2>/dev/null | egrep -qi 'GRand Unified Bootloader.*Legacy'; then
            installDebianPackage ${prefix} grub-legacy
        else
            installDebianPackage ${prefix} grub
        fi

        if [ ! -e ${prefix}/boot/grub/default ]; then
            echo default > ${prefix}/boot/grub/default
        fi
        mount -o bind /proc ${prefix}/proc
        mount -o bind /dev ${prefix}/dev
        chroot ${prefix} /usr/sbin/update-grub
        umount ${prefix}/proc
        umount ${prefix}/dev

    else
        logMessage "pygrub not set, skipping grub-legacy installation"
    fi # if pygrub
fi # if pvgrub

#
#  Log our finish
#
logMessage Script $0 finished
